import React, { useEffect, useState } from "react";
import { toast } from "react-toastify";
import Swal from "sweetalert2";

function History() {
  const [history, setHistory] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [selectedMenu, setSelectedMenu] = useState(null);

  useEffect(() => {
    const fetchHistory = async () => {
      const token = localStorage.getItem("token");

      try {
        const res = await fetch("http://localhost:3000/api/menu/history", {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        });

        if (res.ok) {
          const data = await res.json();
          setHistory(data);
        } else {
          toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏");
        }
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞:", err);
        toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏");
      } finally {
        setIsLoading(false);
      }
    };

    fetchHistory();
  }, []);

  const handleClearHistory = async () => {
    const token = localStorage.getItem("token");

    const result = await Swal.fire({
      title: "–£–¥–∞–ª–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é?",
      text: "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –º–µ–Ω—é?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "–£–¥–∞–ª–∏—Ç—å",
      cancelButtonText: "–û—Ç–º–µ–Ω–∞",
    });

    if (!result.isConfirmed) return;

    try {
      const res = await fetch("http://localhost:3000/api/menu/history", {
        method: "DELETE",
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });

      if (res.ok) {
        setHistory([]);
        toast.success("–ò—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞");
      } else {
        toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏");
      }
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞:", err);
      toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏");
    }
  };

  const handleDeleteMenu = async (id) => {
    const token = localStorage.getItem("token");

    const result = await Swal.fire({
      title: "–£–¥–∞–ª–∏—Ç—å –º–µ–Ω—é?",
      text: "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "–£–¥–∞–ª–∏—Ç—å",
      cancelButtonText: "–û—Ç–º–µ–Ω–∞",
    });

    if (!result.isConfirmed) return;

    try {
      const res = await fetch(`http://localhost:3000/api/menu/${id}`, {
        method: "DELETE",
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });

      if (res.ok) {
        setHistory((prev) => prev.filter((item) => item.id !== id));
        toast.success("–ú–µ–Ω—é —É–¥–∞–ª–µ–Ω–æ");
      } else {
        toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–µ–Ω—é");
      }
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞:", err);
      toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–µ–Ω—é");
    }
  };

  return (
    <div>
      <h1 className="text-3xl font-bold text-center mb-6">–ò—Å—Ç–æ—Ä–∏—è –ú–µ–Ω—é</h1>

      {history.length > 0 && (
        <div className="flex justify-end mb-4">
          <button
            onClick={handleClearHistory}
            className="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 transition"
          >
            –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é
          </button>
        </div>
      )}

      {isLoading ? (
        <p className="text-center">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      ) : history.length === 0 ? (
        <p className="text-center">–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞.</p>
      ) : (
        history.map((entry) => (
          <div
            key={entry.id}
            className="bg-white p-6 rounded-lg shadow-md mb-6 hover:shadow-lg transition relative"
          >
            <button
              onClick={(e) => {
                e.stopPropagation();
                handleDeleteMenu(entry.id);
              }}
              className="absolute top-2 right-2 p-1 rounded hover:bg-red-100 transition"
              title="–£–¥–∞–ª–∏—Ç—å"
            >
              <img
                src="/trash.png" // <- –ø—É—Ç—å –æ–±–Ω–æ–≤–ª—ë–Ω –ø–æ–¥ —Ç–≤–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                alt="–£–¥–∞–ª–∏—Ç—å"
                className="w-6 h-6 object-contain"
              />
            </button>

            <div
              onClick={() => setSelectedMenu(entry)}
              className="cursor-pointer"
            >
              <h2 className="text-xl font-semibold">
                üìÖ {new Date(entry.created_at).toLocaleString("ru-RU")}
              </h2>
              <p className="text-gray-500">–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª–∏</p>
            </div>
          </div>
        ))
      )}

      {selectedMenu && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50">
          <div className="bg-white w-full max-w-2xl p-6 rounded-lg shadow-lg overflow-y-auto max-h-[90vh]">
            <h2 className="text-2xl font-bold mb-4 text-center">
              –ú–µ–Ω—é –æ—Ç{" "}
              {new Date(selectedMenu.created_at).toLocaleString("ru-RU")}
            </h2>

            {["breakfast", "lunch", "dinner"].map((mealType) => (
              <div key={mealType} className="mb-6">
                <h3 className="text-xl font-semibold mb-2">
                  {mealType === "breakfast"
                    ? "–ó–∞–≤—Ç—Ä–∞–∫"
                    : mealType === "lunch"
                    ? "–û–±–µ–¥"
                    : "–£–∂–∏–Ω"}
                </h3>
                <ul className="list-disc ml-6 space-y-1 text-gray-700">
                  {selectedMenu[mealType].map((item, idx) => (
                    <li key={idx}>
                      <span className="font-medium">{item.name}</span> ‚Äî{" "}
                      {item.calories || 0} –∫–∫–∞–ª, –ë: {item.protein || 0} / –ñ:{" "}
                      {item.fat || 0} / –£: {item.carbs || 0}
                    </li>
                  ))}
                </ul>
              </div>
            ))}

            <div className="flex justify-center gap-4">
              <button
                onClick={() => {
                  localStorage.setItem(
                    "generatedMenu",
                    JSON.stringify(selectedMenu)
                  );
                  toast.success("–ú–µ–Ω—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω–æ–µ");
                  setSelectedMenu(null);
                }}
                className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition"
              >
                –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –º–µ–Ω—é
              </button>

              <button
                onClick={() => setSelectedMenu(null)}
                className="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 transition"
              >
                –ó–∞–∫—Ä—ã—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default History;
